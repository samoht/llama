external is_relative : string -> bool = "llama_filename_is_relative"

(* filename.mlp *)

open Pervasives

#ifdef msdos
open Char

let lowercase s =
  let lc = create_string (String.length s) in
  for i = 0 to String.length s - 1 do
    let c = s.[i] in
	if c >= 'A' && c <= 'Z'
	then lc.[i] <- char_of_int(int_of_char c + 32)
	else lc.[i] <- c
  done;
  lc
;;
let check_suffix name suff =
  String.length name >= String.length suff &&
  lowercase (String.sub name (String.length name - String.length suff) 
                             (String.length suff)) = lowercase suff
;;
#else
let check_suffix name suff =
  String.length name >= String.length suff &&
  String.sub name (String.length name - String.length suff) (String.length suff)
    = suff
;;
#endif

let chop_suffix name suff =
  let n = String.length name - String.length suff in
  if n < 0 then invalid_arg "chop_suffix" else String.sub name 0 n
;;

#ifdef unix
let current_dir_name = ".";;

let concat dirname filename =
  let l = String.length dirname - 1 in
  if l < 0 || String.nth_char dirname l == '/'
  then dirname ^ filename
  else dirname ^ "/" ^ filename
;;

let is_absolute n =
     (String.length n >= 1 && String.sub n 0 1 = "/")
  || (String.length n >= 2 && String.sub n 0 2 = "./")
  || (String.length n >= 3 && String.sub n 0 3 = "../")
;;

let slash_pos s =
  let rec pos i =
    if i < 0 then raise Not_found
    else if String.nth_char s i == '/' then i
    else pos (i - 1)
  in pos (String.length s - 1)
;;

let basename name =
  try
    let p = slash_pos name + 1 in
      String.sub name p (String.length name - p)
  with Not_found ->
    name
;;

let dirname name =
  try
    match slash_pos name with
      0 -> "/"
    | n -> String.sub name 0 (slash_pos name)
  with Not_found ->
    "."
;;
#endif

#ifdef macintosh
let current_dir_name = ":";;

let is_absolute n =
  try
    for i = 0 to String.length n - 1 do
      if String.nth_char n i == ':' then raise Exit
    done;
    false
  with Exit ->
    true
;;

let concat dirname filename =
  let dirname1 =
    if is_absolute dirname
    then dirname
    else ":" ^ dirname in
  let l =
    String.length dirname1 - 1 in
  let dirname2 =
    if l < 0 || String.nth_char dirname1 l == ':'
    then dirname1
    else dirname1 ^ ":" in
  let filename2 =
    if String.length filename > 0 && String.nth_char filename 0 == ':'
    then String.sub filename 1 (String.length filename - 1)
    else filename in
  dirname2 ^ filename2
;;

let colon_pos s =
  let rec pos i =
    if i < 0 then raise Not_found else
    if String.nth_char s i == ':' then i else pos (i - 1)
  in pos (String.length s - 1)
;;

let basename name =
  try
    let p = colon_pos name + 1 in
      String.sub name p (String.length name - p)
  with Not_found ->
    name
;;

let dirname name =
  if name = ":" then name else
    try
      String.sub name 0 (colon_pos name)
    with Not_found ->
      ":"
;;
#endif

#ifdef msdos
let current_dir_name = ".";;

let concat dirname filename =
  let l = String.length dirname - 1 in
  if l < 0 || String.nth_char dirname l == '\\' || String.nth_char dirname l == ':'
  then dirname ^ filename
  else dirname ^ "\\" ^ filename
;;

let is_absolute n =
     (String.length n >= 2 && String.nth_char n 1 == ':')
  || (String.length n >= 1 && String.sub n 0 1 = "\\")
  || (String.length n >= 2 && String.sub n 0 2 = ".\\")
  || (String.length n >= 3 && String.sub n 0 3 = "..\\")
;;

let sep_pos s =
  let rec pos i =
    if i < 0 then raise Not_found else
      match String.nth_char s i with
        '/' | '\\' | ':' -> i
      | _ -> pos (i - 1)
  in pos (String.length s - 1)
;;

let basename name =
  try
    let p = sep_pos name + 1 in
      String.sub name p (String.length name - p)
  with Not_found ->
    name
;;

let rec dirname name =
  if String.length name >= 2 && String.nth_char name 1 == ':' then
    String.sub name 0 2 ^ dirname (String.sub name 2 (String.length name - 2))
  else if name = "/" || name = "\\" then
    name
  else
    try
      String.sub name 0 (sep_pos name)
    with Not_found ->
      "."
;;
#endif
